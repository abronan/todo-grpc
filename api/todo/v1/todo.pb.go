// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/abronan/todo-grpc/api/todo/v1/todo.proto

/*
Package todo is a generated protocol buffer package.

It is generated from these files:
	github.com/abronan/todo-grpc/api/todo/v1/todo.proto

It has these top-level messages:
	Todo
	CreateTodoRequest
	CreateTodoResponse
	CreateTodosRequest
	CreateTodosResponse
	GetTodoRequest
	GetTodoResponse
	DeleteTodoRequest
	DeleteTodoResponse
	UpdateTodoRequest
	UpdateTodoResponse
*/
package todo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/gogo/protobuf/types"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Todo struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Completed   string `protobuf:"bytes,4,opt,name=completed" json:"completed,omitempty"`
	// @inject_tag: sql:"type:timestamptz,default:now()"
	CreatedAt *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty" sql:"type:timestamptz,default:now()"`
	// @inject_tag: sql:"type:timestamptz"
	UpdatedAt *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty" sql:"type:timestamptz"`
}

func (m *Todo) Reset()                    { *m = Todo{} }
func (m *Todo) String() string            { return proto.CompactTextString(m) }
func (*Todo) ProtoMessage()               {}
func (*Todo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Todo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Todo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Todo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Todo) GetCompleted() string {
	if m != nil {
		return m.Completed
	}
	return ""
}

func (m *Todo) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Todo) GetUpdatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CreateTodoRequest struct {
	Item *Todo `protobuf:"bytes,1,opt,name=item" json:"item,omitempty"`
}

func (m *CreateTodoRequest) Reset()                    { *m = CreateTodoRequest{} }
func (m *CreateTodoRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTodoRequest) ProtoMessage()               {}
func (*CreateTodoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateTodoRequest) GetItem() *Todo {
	if m != nil {
		return m.Item
	}
	return nil
}

type CreateTodoResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateTodoResponse) Reset()                    { *m = CreateTodoResponse{} }
func (m *CreateTodoResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateTodoResponse) ProtoMessage()               {}
func (*CreateTodoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateTodoResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateTodosRequest struct {
	Items []*Todo `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *CreateTodosRequest) Reset()                    { *m = CreateTodosRequest{} }
func (m *CreateTodosRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTodosRequest) ProtoMessage()               {}
func (*CreateTodosRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateTodosRequest) GetItems() []*Todo {
	if m != nil {
		return m.Items
	}
	return nil
}

type CreateTodosResponse struct {
	Ids []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
}

func (m *CreateTodosResponse) Reset()                    { *m = CreateTodosResponse{} }
func (m *CreateTodosResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateTodosResponse) ProtoMessage()               {}
func (*CreateTodosResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateTodosResponse) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type GetTodoRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetTodoRequest) Reset()                    { *m = GetTodoRequest{} }
func (m *GetTodoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTodoRequest) ProtoMessage()               {}
func (*GetTodoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetTodoRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetTodoResponse struct {
	Item *Todo `protobuf:"bytes,1,opt,name=item" json:"item,omitempty"`
}

func (m *GetTodoResponse) Reset()                    { *m = GetTodoResponse{} }
func (m *GetTodoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTodoResponse) ProtoMessage()               {}
func (*GetTodoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetTodoResponse) GetItem() *Todo {
	if m != nil {
		return m.Item
	}
	return nil
}

type DeleteTodoRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteTodoRequest) Reset()                    { *m = DeleteTodoRequest{} }
func (m *DeleteTodoRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteTodoRequest) ProtoMessage()               {}
func (*DeleteTodoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteTodoRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteTodoResponse struct {
}

func (m *DeleteTodoResponse) Reset()                    { *m = DeleteTodoResponse{} }
func (m *DeleteTodoResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteTodoResponse) ProtoMessage()               {}
func (*DeleteTodoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type UpdateTodoRequest struct {
	Item *Todo `protobuf:"bytes,1,opt,name=item" json:"item,omitempty"`
}

func (m *UpdateTodoRequest) Reset()                    { *m = UpdateTodoRequest{} }
func (m *UpdateTodoRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateTodoRequest) ProtoMessage()               {}
func (*UpdateTodoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UpdateTodoRequest) GetItem() *Todo {
	if m != nil {
		return m.Item
	}
	return nil
}

type UpdateTodoResponse struct {
}

func (m *UpdateTodoResponse) Reset()                    { *m = UpdateTodoResponse{} }
func (m *UpdateTodoResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateTodoResponse) ProtoMessage()               {}
func (*UpdateTodoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func init() {
	proto.RegisterType((*Todo)(nil), "todo.v1.Todo")
	proto.RegisterType((*CreateTodoRequest)(nil), "todo.v1.CreateTodoRequest")
	proto.RegisterType((*CreateTodoResponse)(nil), "todo.v1.CreateTodoResponse")
	proto.RegisterType((*CreateTodosRequest)(nil), "todo.v1.CreateTodosRequest")
	proto.RegisterType((*CreateTodosResponse)(nil), "todo.v1.CreateTodosResponse")
	proto.RegisterType((*GetTodoRequest)(nil), "todo.v1.GetTodoRequest")
	proto.RegisterType((*GetTodoResponse)(nil), "todo.v1.GetTodoResponse")
	proto.RegisterType((*DeleteTodoRequest)(nil), "todo.v1.DeleteTodoRequest")
	proto.RegisterType((*DeleteTodoResponse)(nil), "todo.v1.DeleteTodoResponse")
	proto.RegisterType((*UpdateTodoRequest)(nil), "todo.v1.UpdateTodoRequest")
	proto.RegisterType((*UpdateTodoResponse)(nil), "todo.v1.UpdateTodoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TodoService service

type TodoServiceClient interface {
	CreateTodo(ctx context.Context, in *CreateTodoRequest, opts ...grpc.CallOption) (*CreateTodoResponse, error)
	// Bulk version of CreateTodo
	CreateTodos(ctx context.Context, in *CreateTodosRequest, opts ...grpc.CallOption) (*CreateTodosResponse, error)
	GetTodo(ctx context.Context, in *GetTodoRequest, opts ...grpc.CallOption) (*GetTodoResponse, error)
	DeleteTodo(ctx context.Context, in *DeleteTodoRequest, opts ...grpc.CallOption) (*DeleteTodoResponse, error)
	UpdateTodo(ctx context.Context, in *UpdateTodoRequest, opts ...grpc.CallOption) (*UpdateTodoResponse, error)
}

type todoServiceClient struct {
	cc *grpc.ClientConn
}

func NewTodoServiceClient(cc *grpc.ClientConn) TodoServiceClient {
	return &todoServiceClient{cc}
}

func (c *todoServiceClient) CreateTodo(ctx context.Context, in *CreateTodoRequest, opts ...grpc.CallOption) (*CreateTodoResponse, error) {
	out := new(CreateTodoResponse)
	err := grpc.Invoke(ctx, "/todo.v1.TodoService/CreateTodo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) CreateTodos(ctx context.Context, in *CreateTodosRequest, opts ...grpc.CallOption) (*CreateTodosResponse, error) {
	out := new(CreateTodosResponse)
	err := grpc.Invoke(ctx, "/todo.v1.TodoService/CreateTodos", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) GetTodo(ctx context.Context, in *GetTodoRequest, opts ...grpc.CallOption) (*GetTodoResponse, error) {
	out := new(GetTodoResponse)
	err := grpc.Invoke(ctx, "/todo.v1.TodoService/GetTodo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) DeleteTodo(ctx context.Context, in *DeleteTodoRequest, opts ...grpc.CallOption) (*DeleteTodoResponse, error) {
	out := new(DeleteTodoResponse)
	err := grpc.Invoke(ctx, "/todo.v1.TodoService/DeleteTodo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) UpdateTodo(ctx context.Context, in *UpdateTodoRequest, opts ...grpc.CallOption) (*UpdateTodoResponse, error) {
	out := new(UpdateTodoResponse)
	err := grpc.Invoke(ctx, "/todo.v1.TodoService/UpdateTodo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TodoService service

type TodoServiceServer interface {
	CreateTodo(context.Context, *CreateTodoRequest) (*CreateTodoResponse, error)
	// Bulk version of CreateTodo
	CreateTodos(context.Context, *CreateTodosRequest) (*CreateTodosResponse, error)
	GetTodo(context.Context, *GetTodoRequest) (*GetTodoResponse, error)
	DeleteTodo(context.Context, *DeleteTodoRequest) (*DeleteTodoResponse, error)
	UpdateTodo(context.Context, *UpdateTodoRequest) (*UpdateTodoResponse, error)
}

func RegisterTodoServiceServer(s *grpc.Server, srv TodoServiceServer) {
	s.RegisterService(&_TodoService_serviceDesc, srv)
}

func _TodoService_CreateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).CreateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.v1.TodoService/CreateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).CreateTodo(ctx, req.(*CreateTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_CreateTodos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTodosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).CreateTodos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.v1.TodoService/CreateTodos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).CreateTodos(ctx, req.(*CreateTodosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_GetTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).GetTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.v1.TodoService/GetTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).GetTodo(ctx, req.(*GetTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_DeleteTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).DeleteTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.v1.TodoService/DeleteTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).DeleteTodo(ctx, req.(*DeleteTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_UpdateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).UpdateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.v1.TodoService/UpdateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).UpdateTodo(ctx, req.(*UpdateTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TodoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "todo.v1.TodoService",
	HandlerType: (*TodoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTodo",
			Handler:    _TodoService_CreateTodo_Handler,
		},
		{
			MethodName: "CreateTodos",
			Handler:    _TodoService_CreateTodos_Handler,
		},
		{
			MethodName: "GetTodo",
			Handler:    _TodoService_GetTodo_Handler,
		},
		{
			MethodName: "DeleteTodo",
			Handler:    _TodoService_DeleteTodo_Handler,
		},
		{
			MethodName: "UpdateTodo",
			Handler:    _TodoService_UpdateTodo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/abronan/todo-grpc/api/todo/v1/todo.proto",
}

func init() {
	proto.RegisterFile("github.com/abronan/todo-grpc/api/todo/v1/todo.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 527 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x95, 0xb6, 0xeb, 0xe8, 0x89, 0xf6, 0xef, 0x50, 0x20, 0x0a, 0x95, 0x08, 0x19, 0x12,
	0xd3, 0x24, 0x12, 0xad, 0x43, 0x48, 0xdb, 0xdd, 0x00, 0x89, 0xfb, 0x6e, 0xdc, 0x20, 0x26, 0x94,
	0xc4, 0xa6, 0x58, 0x34, 0x71, 0x48, 0x9c, 0xde, 0x20, 0x6e, 0x78, 0x05, 0x1e, 0x8d, 0x37, 0x98,
	0x78, 0x10, 0x64, 0xc7, 0x69, 0xbc, 0xa6, 0xe2, 0xcf, 0x55, 0x6b, 0x9f, 0xef, 0xfc, 0xce, 0xf1,
	0xf7, 0x29, 0x70, 0x3a, 0x67, 0xe2, 0x53, 0x15, 0x07, 0x09, 0x4f, 0xc3, 0x28, 0x2e, 0x78, 0x16,
	0x65, 0xa1, 0xe0, 0x84, 0x3f, 0x9b, 0x17, 0x79, 0x12, 0x46, 0x39, 0x53, 0xa7, 0x70, 0x79, 0xa2,
	0x7e, 0x83, 0xbc, 0xe0, 0x82, 0xe3, 0xb6, 0xfa, 0xbf, 0x3c, 0x71, 0x27, 0x73, 0xce, 0xe7, 0x0b,
	0xaa, 0x74, 0x51, 0x96, 0x71, 0x11, 0x09, 0xc6, 0xb3, 0xb2, 0x96, 0xb9, 0x8f, 0x74, 0x55, 0x9d,
	0xe2, 0xea, 0x63, 0x28, 0x58, 0x4a, 0x4b, 0x11, 0xa5, 0x79, 0x2d, 0xf0, 0x6f, 0x2c, 0x18, 0x5c,
	0x71, 0xc2, 0x71, 0x17, 0x7a, 0x8c, 0x38, 0x96, 0x67, 0x1d, 0x8d, 0x66, 0x3d, 0x46, 0x70, 0x0c,
	0x5b, 0x82, 0x89, 0x05, 0x75, 0x7a, 0xea, 0xaa, 0x3e, 0xa0, 0x07, 0x36, 0xa1, 0x65, 0x52, 0xb0,
	0x5c, 0x4e, 0x71, 0xfa, 0xaa, 0x66, 0x5e, 0xe1, 0x04, 0x46, 0x09, 0x4f, 0xf3, 0x05, 0x15, 0x94,
	0x38, 0x03, 0x55, 0x6f, 0x2f, 0xf0, 0x0c, 0x20, 0x29, 0x68, 0x24, 0x28, 0xf9, 0x10, 0x09, 0x67,
	0xcb, 0xb3, 0x8e, 0xec, 0xa9, 0x1b, 0xd4, 0x4b, 0x06, 0xcd, 0x92, 0xc1, 0x55, 0xb3, 0xe4, 0x6c,
	0xa4, 0xd5, 0x17, 0x42, 0xb6, 0x56, 0x39, 0x69, 0x5a, 0x87, 0x7f, 0x6f, 0xd5, 0xea, 0x0b, 0xe1,
	0xbf, 0x80, 0x83, 0x57, 0x8a, 0x23, 0x5f, 0x3a, 0xa3, 0x5f, 0x2a, 0x5a, 0x0a, 0x7c, 0x0c, 0x03,
	0x26, 0x68, 0xaa, 0x9e, 0x6c, 0x4f, 0x77, 0x02, 0x6d, 0x68, 0xa0, 0x34, 0xaa, 0xe4, 0x3f, 0x01,
	0x34, 0xfb, 0xca, 0x9c, 0x67, 0x25, 0x5d, 0x77, 0xca, 0x3f, 0x33, 0x55, 0x65, 0x83, 0x3f, 0x84,
	0x2d, 0xc9, 0x28, 0x1d, 0xcb, 0xeb, 0x77, 0xf9, 0x75, 0xcd, 0x7f, 0x0a, 0x77, 0x6f, 0xb5, 0xea,
	0x09, 0xfb, 0xd0, 0x67, 0xa4, 0xee, 0x1c, 0xcd, 0xe4, 0x5f, 0xdf, 0x83, 0xdd, 0x37, 0x54, 0x98,
	0xeb, 0xaf, 0x6f, 0xf1, 0x1c, 0xf6, 0x56, 0x0a, 0x8d, 0xf9, 0x87, 0x17, 0x1e, 0xc2, 0xc1, 0x6b,
	0x2a, 0xa3, 0xf9, 0x13, 0x7a, 0x0c, 0x68, 0x8a, 0x6a, 0xba, 0x34, 0xf5, 0xad, 0x72, 0xf8, 0x3f,
	0x4d, 0x1d, 0x03, 0x9a, 0x7d, 0x35, 0x6d, 0x7a, 0xd3, 0x07, 0x5b, 0x5e, 0x5c, 0xd2, 0x62, 0xc9,
	0x12, 0x8a, 0xd7, 0x00, 0xad, 0x33, 0xe8, 0xae, 0x40, 0x9d, 0x1c, 0xdd, 0x87, 0x1b, 0x6b, 0x7a,
	0xc9, 0xfb, 0xdf, 0x7f, 0xfe, 0xfa, 0xd1, 0xdb, 0xf7, 0xef, 0x34, 0x9f, 0xcf, 0xb9, 0x5a, 0x02,
	0x63, 0xb0, 0x0d, 0xe3, 0x71, 0x13, 0xa3, 0x49, 0xd2, 0x9d, 0x6c, 0x2e, 0xea, 0x09, 0x8e, 0x9a,
	0x80, 0xfe, 0x4e, 0x33, 0x21, 0x8c, 0xab, 0xc5, 0xe7, 0x73, 0xeb, 0x18, 0x2f, 0x61, 0x5b, 0x27,
	0x82, 0x0f, 0x56, 0x88, 0xdb, 0x29, 0xba, 0x4e, 0xb7, 0xa0, 0xb9, 0xf7, 0x14, 0x77, 0x0f, 0x5b,
	0xee, 0x57, 0x46, 0xbe, 0xe1, 0x7b, 0x80, 0x36, 0x0b, 0xc3, 0x97, 0x4e, 0x8a, 0x86, 0x2f, 0x1b,
	0xc2, 0xd3, 0xf4, 0xe3, 0x35, 0xfa, 0x35, 0x40, 0x9b, 0x8d, 0x41, 0xef, 0x04, 0x6d, 0xd0, 0xbb,
	0x61, 0x36, 0xae, 0xbb, 0x6b, 0xae, 0xbf, 0x1c, 0xbe, 0x1b, 0xc8, 0x53, 0x3c, 0x54, 0x9f, 0xeb,
	0xe9, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x12, 0xc8, 0x4f, 0x74, 0xfa, 0x04, 0x00, 0x00,
}
